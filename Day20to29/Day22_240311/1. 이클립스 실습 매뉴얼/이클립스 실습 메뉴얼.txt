이클립스 메뉴얼

1. File - New - Java Project - FirstProject(프로젝트 이름) - Module - Create module-info.java file 체크해제 -  finish
단축키
ctrl + n - Java - Java Project - Project name - FirstProject(프로젝트 이름) - Module - Create module-info.java file 체크해제 -  finish


2. FirstProject(프로젝트 이름) 에서 오른쪽 클릭 - new - class - name - Hello(클래스 이름) - package : fruit.orange - public static void main(String[] args) 체크
필요없는 라인에 커서 클릭 - ctrl + D (라인 삭제 단축키)
sysout 입력후 ctrl + space bar(System.out.println 자동완성) - "Hello" 문자열 입력
ctrl + f11 (실행 단축키)

ctrl + + 화면 커짐
ctrl + - 화면 작아짐

System.out.println("Hello");
쌍따움표를 지우거나, 세미콜론을 빼고 옆에 x가 보이도록 해서, 문법적으로 잘못된 부분을 보여준다.

3. FirstProject(프로젝트 이름) 에서 오른쪽 클릭 - new - class - name - Hello2(클래스 이름)
main 입력후 ctrl + space bar ( main메소드 자동완성)

4. ctrl + a(전체 선택)
ctrl + i(들여쓰기, 내어쓰기 정렬)

5. FirstProject(프로젝트 이름) 에서 오른쪽 클릭
Package 설명
Modifiers  설명

6. Friend 클래스 만들기
private String name 입력
ctrl + alt + 아래 화살표(아래에 복사하기 단축키) 두번
private String birth
private String address

alt + shift + s, o  (Generate Constructor using Fields)
Select All
Deselect All
Up
Down
Access modifier
Omit call to default constructor super() 체크 설명

alt + shift + s, v (Override/implement Methods ...)
Object - toString 체크
메인 메소드에서 참조변수 넣고 보여주기

public void show()
{
	System.out.println("이름 : " + name);
	System.out.println("생일 : " + birth);
	System.out.println("주소 : " + address);
}
6-1. access method 만들기
alt + shift + s, r (Generate Getters and Setters ...)

Select All
Deselect All 
Select Getters
Select Setters

7. alt + shift + s,o (Generate Constructor using Fields)
Select All 생성자 만들기

8. alt +shift + s,o  (Generate Constructor using Fields)
Deselect All
Omit call to default constructor super() 체크

9.  alt + shift +s,o (Generate Constructor using Fields)
name과 address 선택
* alt + shift + s, c (Generate Constructors from Superclass)
10. alt + up, down 이동

11. 디폴트 생성자, 매개변수 두 개짜리 생성자 주석 처리
ctrl + / 		// 주석
ctrl + shift + /	/* */ 주석
ctrl + shift + \	블록 주석 풀기
12. 이클립스 주석 제거

이클립스에서 자동으로 생성해 주는 메소드에는 아래의 주석이 포함되어 있습니다. 

// TODO Auto-generated method stub 

위의 주석을 제거하는 방법은 다음과 같습니다. 

* 이클립스의 Window -> Preferences 메뉴를 클릭한다.
* Java -> Code Style -> Code Templates 를 선택한다.
* Code -> Method body 를 선택한다.
* Edit 버튼을 클릭한 후, "// ${todo}" 로 시작하는 라인을 제거한다.
// ${todo} Auto-generated method stub

Constructor body
Getter body

13. UnivFriend 만들기. 상위 클래스는 Friend
Costructors from superclass
inherited abstract methods 설명

위에꺼 체크하고 만들기
체크지우고 만들기 (alt + shift + s, v) Override/implement Methods ...

Friend에 abstract 메소드 public abstract void showBasicInfo(); 만들기
UnivFriend에서 구현해보기.
UnivFriend에서 F4를 눌러서 클래스 계층도 보여주기
throw new ArithmethicException() 
Arithm + ctrl + spacebar
AtrithmethicException 클래스 계층도 보여주기

멤버변수 String major; 만들기
생성자 만들기

14. Good interface 만들기
void hi()
void bye() 만들기

15. GoodImpl 클래스를 Good interface를 구현해서 만들기
16. MultiImpl 클래스를 Good interface와 Nice interface를 구현해서 만들기

17. try catch 자동완성 보여주기 
public class ExTest1 {

	public static void main(String[] args) {
		throw new RuntimeException();
	}
}

18. try catch 자동완성 보여주기 

public class ExTest2 {

	public static void main(String[] args) {
		throw new Exception();
	}
}

18-1.
Friend에 클론 메소드 오버라이딩 해서 보여주기.
Test 클래스 만들고 
Friend 클래스 복사해서 보여주기
예외 처리 하기
19.
Ctrl + I 

자동 들여쓰기 기능(만) 해준다. 
( I = indent = 글의 행을 들여쓰다 )

블록 미 지정 시 : 해당 라인만 적용
블록 지정 시 : 지정된 블록만 적용

< FROM >
public void Test() {
String str = "Hello";
}

< TO >
public void Test() {
	String str = "Hello";
}

Ctrl + Shift + F
이클립스에 등록된 포맷 형식에 맞게 포맷팅 해준다.
( F = format )

블록 미 지정 시 : 파일 전체에 적용
블록 지정 시 : 지정된 블록만 적용

Preference  -  Java  -  Code Style  -  Formatter  여기서 설정하면 된다.

1) Line Wrapping - General setting - Maximum line width 
2) Comment - Line width - Maximum line width for comments

20 . alt + shift + a	멀티 컬럼 편집

21. 실행취소(undo) ctrl + z
22. 다시실행(redo) ctrl + y

23. ctrl + shift + l(엘)  // 전체 단축키 목록 보기
24. F3 선언된 곳으로 가기

25. Window - Preferences - Java - Editor - Templates(단축어 설정 가능)
26. Window - Preferences - General - Keys - Content Assist (단축키 설정)
27. Window - Preferences - General - Keys - Export CSV (단축키 목록 csv 파일로)

* 단어 선택
alt + shift + arrow up/down
환경설정 alt, w,p

메소드 자동 완성
public + ctrl + space

ctrl + f7 창간이동
alt + 오른쪽 화살표, 왼쪽 화살표 소스코드 간 이동

28. 파일 이동
Ctrl + shift + e
에디터 안에서 열린 파일들 확인 후 원하는 파일로 이동하기

29. 열린 파일 전체 확인 후 이동 미니창 버전 Ctrl + e

30. 파일 열기 Ctrl + shift + r
파일이 몇개 없으면 Solution Explorer 창에서 디렉터리 계층구조 따라서 열면 되는데
파일이 많으면, 목록중에 찾기가 어렵다.
이럴 때 파일을 검색해서 열 수 있는게, 이 단축키 이다.
파일 이름이 잘 기억 안날 때에는 '*'를 활용 할 수 있어서 더 유용하다.
ex) 파일 이름에 point가 들어간다 하면 *point*

31. 같은 변수일 경우에만 이름 변경 Alt + shift + r
이 단축키는 동일한 변수일 경우에만 이름을 변경을 해줘서,
변수 이름같은 거 바꿀때 유용한 단축키이다.

public class Test{
	public static void main(String[] args){
		{
			int num = 5;
		}
		int num = 4;
		System.out.println(num);
	}
}

num이라는 변수가 총 3번 나타나는데 두번째 num이랑 출력함수에 들어있는 num이 같고
블록안에 있는 첫번째 num은 다른 변수 이다.

출력함수에 있는 num을 선택하고, 이름변경 단축키를 눌러 num에서 number로 바꾸고
Preview 버튼을 눌러서 어떤게 바뀌는지 미리 확인해보자.

32. 메소드나 객체 변수가 사용(호출)된 모든 곳을 찾음 Ctrl + shift + g