1. 스트림을 이용하여 다음 배열의 홀수의 총합을 구하여 출력하자.
int[] ar = {1, 2, 3, 4, 5};

2. 다음 배열을 가지고 스트림을 생성하고, 각 요소를 출력하자.
String[] names = {"YOON", "LEE", "PARK"};

3. 다음 배열의 스트림을 생성하고 전체 내용을 출력하자.
다음 배열의 1번째 부터 4번째 요소를 출력하자.(1번째 포함 4번째 불포함) 
double[] ds = {1.1, 2.2, 3.3, 4.4, 5.5};

4. "Toy", "Robot", "Box"로 스트림을 생성하고 각 요소를 출력해 보자.

5. 스트림을 이용해서 다음 배열의 홀수만 출력하자.
int[] ar = {1, 2, 3, 4, 5};
스트림을 이용해서 다음 배열의 길이가 3인 문자열만 출력하자.
"Toy", "Robot", "Box"

6. 다음 문자열을 "Box", "Robot", "Simple" 스트림을 이용하여 각각의
문자열의 길이를 출력하자.

7. 아래의 코드에서 '문자열이 담긴 상자'를 담고 있는 컬렉션 인스턴스를 생성하였다. 이를 대상으로 
스트림을 생성하고, 이 스트림을 기반으로 문자열 스트림을 생성하는 맵핑 연산을 진행해보자. 그리고
그 결과를 forEach 연산을 통해 출력해보자.

import java.util.Arrays;
import java.util.List;

class Box<T>
{
	private T ob;
	public Box(T o) { ob = o; }
	public T get() { return ob; }
}
public class BoxToStgring {

	public static void main(String[] args) {
		List<Box<String>> ls = Arrays.asList(new Box<>("Robot"), new Box<>("Simple"));
		// 이 위치에 스트림의 생성 및 맵핑 연산을 진행하는 문장 구성
	}

}

8. 위 문제 7에서 Box<String>을 String으로 맵핑하였다. 이번에는 Box<String>을 Integer로
맵핑하도록 문제7의 답안으로 수정해보자. 이때 Integer는 상자에 담긴 문자열의 길이이다.

9. 8번 문제를 mapToInt로 풀어보자.

10. 스트림을 이용하여 정가 500원 미만의 장난감 가격의 총합을 구해보자.

import java.util.List;
import java.util.ArrayList;

class ToyPriceInfo {			// 장난감 모델 별 가격 정보
    private String model;		// 모델 명
    private int price;			// 가격
    
    public ToyPriceInfo(String m, int p) {
        model = m;
        price = p;
    }

    public int getPrice() {
        return price;
    }
}

class ToyStream {
    public static void main(String[] args) {
        List<ToyPriceInfo> ls = new ArrayList<>();
        ls.add(new ToyPriceInfo("GUN_LR_45", 200));
        ls.add(new ToyPriceInfo("TEDDY_BEAR_S_014", 350));
        ls.add(new ToyPriceInfo("CAR_TRANSFORM_VER_7719", 550));
    }
}

11. [두 번의 중간 연산]
10번 문제의 ToyPriceInfo 클래스에 다음 메소드를 추가하자

public String getModel() { return model; }

그리고 예제의 내용대로 스트림을 생성한 이후에 다음의 내용대로 필터링, 맵핑을 하고 마지막에 결과로 남은 스트림의 내용을 forEach 연산을 통해 전부 출력하자.
필터링 조건	model이 참조하는 문자열의 길이가 10을 넘으면 해당 인스턴스 통과
맵핑 방법		ToyPriceInfo 인스턴스 -> String 인스턴스(모델명)

12. 다음 문자열들을 스트림을 이용하여, 가장 긴 문자열을 구하여 출력하자.

"Box", "Simple", "Complex", "Robot"

13. 12번을 병렬처리기반으로 수정해 보자.