1. 11, 22, 33, 44을 요소로 갖는 스트림을 생성하고 그 각요소를 출력하자.
"So Simple"이라는 요소로 갖는 스트림을 생성하고 그 각요소를 출력하자.
"Toy", "Robot", "Box"를 요소로 갖고 있는 리스트를 요소로 갖는 스트림을 생성하고 그 각요소를 출력하자.

2. 다음을 IntStream을 이용하여 코딩하시오.
7, 5, 3을 인자로 전달해서 스트림으로
숫자 5 부터 8 이전까지 스트림으로
숫자 5 부터 8 까지 스트림으로
그리고 각각의 스트림의 요소를 출력하시오.

3. 다음 문자열을 요소로 가지는 스트림을 생성해서, 가장 긴 문자열을 구해서 출력하자.
병렬스트림을 이용하자.
"Box", "Simple", "Complex", "Robot"

4. "Cake", "Milk"를 요소로 하는 스트림을 생성한다.
"Lemon", "Jelly"를 요소로 하는 스트림을 생성한다.
유소를 하나로 묶은 후에 각 요소를 출력한다.

5. 다음 문자열을 요소로 가지는 스트림을 만들고, 그것을 "_"를 기준으로 문자열을 분리하여 스트림을 만든후 모든 요소를 출력하자.

6. 다음 소스코드의 ReportCard 배열을 스트림으로 만들어 평균을 출력하자.

import java.util.Arrays;
import java.util.stream.IntStream;

class ReportCard {
    private int kor;    // 국어 점수
    private int eng;    // 영어 점수
    private int math;    // 수학 점수
    
    public ReportCard(int k, int e, int m) {
        kor = k;
        eng = e;
        math = m;    
    }
    public int getKor() { return kor; }
    public int getEng() { return eng; }
    public int getMath() { return math; }
}


class GradeAverage2 {
    public static void main(String[] args) {
        ReportCard[] cards = {
            new ReportCard(70, 80, 90),
            new ReportCard(90, 80, 70),
            new ReportCard(80, 80, 80)
        };       

     }
}

7. 다음 문자열을 요소로 가지고 있는 스트림을 생성하고, 알파벳 순으로 정렬한 후, 전체요소를 출력하자.
"Box", "Apple", "Robot"
다음 문자열을 요소로 가지고 있는 스트림을 생성하고, 문자열의 길이순으로 정렬한 후, 전체요소를 출력하자.
"Box", "Apple", "Rabbit"

8. 다음 정수를 요소로 갖고 있는 스트림을 생성하고, 정렬한 후, 모든 요소를 출력하자.
3, 9, 4, 2
다음 실수를 요소로 갖고 있는 스트림을 생성하고, 정렬한 후, 모든 요소를 출력하자.
3.3, 6.2, 1.5, 8.3

9. 다음 소스코드의 실행 결과를 서술하고, 그 이유에 대해서 설명하시오.

import java.util.stream.IntStream;

class LazyOpStream {
    public static void main(String[] args) {
        // 최종 연산이 생략된 스트림의 파이프라인
        IntStream.of(1, 3, 5)
            .peek(d -> System.out.print(d + "\t"));
        System.out.println();

  
        // 최종 연산이 존재하는 스트림의 파이프라인
        IntStream.of(5, 3, 1)
            .peek(d -> System.out.print(d + "\t"))
            .sum();            
        System.out.println();
    }
}

10. 1, 3, 5, 7, 9로 스트림을 만들고 합, 개수, 평균, 최소, 최대를 구하시오.

11. 다음 소스코드의 출력결과를 적으시오.

import java.util.stream.IntStream;

class MatchStream {
    public static void main(String[] args) {
        boolean b = IntStream.of(1, 2, 3, 4, 5)
                          .allMatch(n -> n%2 == 0);
        System.out.println("모두 짝수이다. " + b);

        b = IntStream.of(1, 2, 3, 4, 5)
                    .anyMatch(n -> n%2 == 0);
        System.out.println("짝수가 하나는 있다. " + b);

        b = IntStream.of(1, 2, 3, 4, 5)
                    .noneMatch(n -> n%2 == 0);
        System.out.println("짝수가 하나도 없다. " + b);
    }
}

12. 스트림을 이용하여 다음 내용이 출력되도록 소스코드를 완성하자.

import java.util.Arrays;
import java.util.stream.Stream;
import java.util.stream.DoubleStream;

class ReportCard {
    private int kor;    // 국어 점수
    private int eng;    // 영어 점수
    private int math;    // 수학 점수
    
    public ReportCard(int k, int e, int m) {
        kor = k;
        eng = e;
        math = m;    
    }
    public int getKor() { return kor; }
    public int getEng() { return eng; }
    public int getMath() { return math; }
}


class GradeAverage90 {
    public static void main(String[] args) {
        ReportCard[] cards = {
            new ReportCard(98, 84, 90),
            new ReportCard(92, 87, 95),
            new ReportCard(85, 99, 93)
        };       


    }
}

//평균 90 이상이 한 명 이상 존재합니다. true
//모두 평균 90 이상입니다. true

13. 다음 문자열을 스트림을 이용하여 길이가 5미만인 요소들로 이루어진 ArrayList로 만들자.
"Hello", "Box", "Robot", "Toy"

14. 13번 문제를 병렬스트림으로 처리하는 부분을 추가하자.