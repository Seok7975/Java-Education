참고 사이트
https://adjh54.tistory.com/16#STEP1%3A%20.gitignore%20%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0-1

깃이그노어 탬플릿 사이트
https://www.toptal.com/developers/gitignore

1. .gitignore 사용법
  1) 작성패턴
    - #로 시작하는 라인은 주석, 무시
    - 표준 glob 패턴을 따른다.
    - 디렉토리는 끝에 슬래시(/)를 사용해 표현
    - 느낌표(!)로 시작하는 경우는 예외로 처리

ex)
# 모든 확장자 .a 파일을 무시
*.a
 
# 무시하는 모든 확장자 .a 파일들 중에서 lib.a 파일은 무시하지 않음
!lib.a
 
# Project/
#  ㄴ.gitignore
#  ㄴA/
#    ㄴa.txt
#    ㄴTODO/
#      ㄴtt.txt
#  ㄴTODO/
#    ㄴt.txt

# 현재 폴더 중에서 TODO 폴더에 있는 모든 파일을 무시
# (즉, t.txt 파일만 무시되고 tt.txt 파일은 무시되지 않음)
/TODO
 
# 프로젝트 전체 폴더 중 TODO라는 폴더명을 사용하는 TODO 폴더의 하위 파일은 모두 무시
# (즉, t.txt 파일과 tt.txt 파일 모두 무시됨)
TODO/
 
# Project/
#  ㄴ.gitignore
#  ㄴdoc/
#    ㄴd.txt
#    ㄴp.pdf
#    ㄴserver/
#      ㄴss.txt
#      ㄴpp.pdf

# 현재 폴더 중에서 doc 폴더 바로 밑에 있는 .txt 확장자 파일만 모두 무시
# 단, doc/server/ss.txt 와 같은 형식에서는 .txt 확장자 파일이 무시되지 않음
doc/*.txt
 
# 현재 폴더 중에서 doc 폴더 하위에 있는 .pdf 확장자 파일은
# doc 폴더 하위 어떤 폴더에 들어 있더라도 모두 무시
# (즉, p.pdf 파일과 pp.pdf 파일 모두 무시됨)
doc/**/*.pdf




2. gitignore가 작동되지 않을때 대처법

$ git rm -r --cached .
$ git add .

3. commit/push된 파일 제외 방법

git rm .env --cached
git add .
git commit -m "remove .env file from git"
git push

4. .gitignore에서 제외할 파일

"!" 기호를 파일명 앞에 적어두면 해당 파일은 .gitignore 파일에서 제외할 파일에서 빠집니다.

# *.keystore
!debug.keystore
my-release-key.keystore

5.
#현재 작업 디렉토리에 존재하는 ignore 처리된 파일들의 목록을 표시한다 
$ git clean -Xn 

#위 명령어에 의해 나타난 파일들을 삭제한다
$ git clean -Xf

-X(대문자) 옵션은 ignore 처리된 파일들만 정리한다.ignore 처리된 파일뿐만 아니라 Git에서 관리하지 않는 (untracked) 파일까지 제거하려면 
-x(소문자) 옵션을 사용한다.
