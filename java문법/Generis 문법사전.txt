<Generics>

1. 제네릭(Generics)이란? 내가 직접 지정하는 데이터 타입!

클래스 내부에서 사용할 데이터 타입을 외부에서 지정하는 기법으로 타입을 변화 한 기능.
우리가 변수를 선언할 때 변수의 타입을 지정해 주듯이, 제네릭은 객체(Object)에 타입을 지정해주는 것이라 보면 됨.

2. 제네릭 타입 매개변수(parameter)

List<String> stringLsit = new ArrayList<String>();

제네릭은 <>(꺾쇠 괄호)키워드를 사용하는데 이를 다이아몬드 연산자라고 한다.
그리고 이 꺾쇠 괄호 안에 식별자 기호를 지정함으로써 파라미터화 할 수 있다.
이것을 마치 메소드가 매개변수를 받아 사용하는 것과 비슷하여 제네릭의 타입 매개변수(parameter) / 타입 변수라고 부른다.

타입 매개변수(parameter)는 제네릭을 이용한 클래스나 메소드를 설계할 때 사용

class FruitBox<T> 
{
	List<T> fruits = new ArrayList<>();

	public void add(T fruit) 
	{
	fruits.add(fruit);
	}
}





////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
클래스
- 객체를 만드는 틀 , 객체를 만들기위한 설계도
- 클래스를 만들때는 class 클래스명{  } 으로 만들 수 있습니다.

객체  (객체란 속성(상태)과 기능(동작)을 가진 덩어리)
- 소프트웨어 세계에 구현할 대상, 클래스에 선언된 모양 그대로 생성된 실체
- 클래스의 인스턴스(instance)라고도 부름
- 객체는 모든 인스턴스를 대표하는 포괄적인 의미
- 객체는 속성과 기능의 집합이며, 속성과 기능을 객체의 멤버라고 한다.
- 속성(Property) : 멤버변수(member variable), 특성(attribute), 필드(field), 상태(state)
- 기능(function) : 메서드(method), 행위(behavior), 함수(function)

인스턴스 (생성된 객체, 어떤 클래스에 속하는 각각의 객체)
- 설계도를 바탕으로 소프트웨어 세계에 구현된 구체적인 실체
	즉, 객체를 소프트웨어에 실체화 하면 그것을 "인스턴스"라 부름
	실체화된 인스턴스는 메모리에 할당
- 객체를 생성하여 JVM(자바 가상 머신)이 관리하는 메모리에 적재된 것을 의미
- 어떤 클래스로부터 만들어진 객체(객체의 구체적인 실체)를 그 클래스의 인스턴스라고 합니다.
- 클래스로부터 객체를 만드는 과정을 인스턴스화 라고 한다.
- 특징 : 클래스가 가지고 있는 메소드(method)를 모두 상속 받는다. 

객체와 인스턴스
- 객체는 인스턴스를 포함하는 일반적인 의미
- 인스턴스화 : 클래스로부터 인스턴스를 생성하는 것
- 클래스 -> 인스턴스화 -> 인스턴스(객체)

인스턴스 생성 및 사용
①
클래스명 변수명;                //클래스의 객체를 참조하기 위한 참조변수 선언
변수명 = new 클래스명();  //클래스의 객체를 생성후 객체의 주소를 참조변수에 저장한다. -> 참조변수를 통해 인스턴스 사용가능

Ap c;                                 //Ap클래스 타입의 참조변수 c 선언
c = new Ap();                   //new연산자로 Ap클래스의 객체를 생성후 객체의 주소를 참조변수c에 저장한다.

인스턴스를 생성할려면 특정 클래스를 인스턴스화(클래스로부터 객체를 만드는 과정) 시킨후, 
그 인스턴스의 주소를 변수에 저장해야 한다.
변수는 만들려는 특정 클래스를 타입으로 해야합니다. 그래야 그 클래스를 참조할 수 있기때문입니다.
인스턴스의 주소를 참조변수에 저장하면 참조변수를 통해서 그 인스턴스를 사용할 수 있습니다.
클래스를 직접적으로 사용하는것이 아니라 클래스를 통해서 만들어진 인스턴스를 사용할 수 있는것임.

② 인스턴스를 생성할때 한번에 생성할 수도 있습니다.
Ap p = new Ap();  
//Ap클래스 타입의 참조변수 p를 선언,
//new연산자로 Ap클래스의 객체생성후 객체의 주소를 참조변수 p에 저장


ex)
  o 붕어빵 틀 = Class                     		o 붕어빵 = 객체(Object)
  o 붕어빵을 굽다 = 인스턴스(Instance)화 하다
  o 만들어진 각각의 붕어빵 = Instance

{class 붕어빵 틀}		class 이름
{String 밀가루 반죽, int 팥}	member variables
{굽다()}			member method
[출처] 자바 기초(클래스, 객체, 인스턴스, 인스턴스화)|작성자 될놈





////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 참고
// https://inpa.tistory.com/entry/JAVA-%E2%98%95-ArrayList-%EA%B5%AC%EC%A1%B0-%EC%82%AC%EC%9A%A9%EB%B2%95