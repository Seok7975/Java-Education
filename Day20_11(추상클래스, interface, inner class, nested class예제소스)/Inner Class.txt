* 로컬 클래스 (Local Class):
로컬 클래스는 특정 메서드나 블록 내부에서 정의되는 클래스입니다. 
주로 해당 메서드나 블록 내에서만 사용되어야 하는 경우에 활용됩니다. 
로컬 클래스는 주로 복잡한 로직이나 특정 메서드에서만 
필요한 작은 도우미 클래스를 만들 때 사용됩니다.

public class OuterClass {
    void outerMethod() {
        class LocalClass {
            void localMethod() {
                System.out.println("로컬 클래스의 메서드");
            }
        }

        LocalClass localObj = new LocalClass();
        localObj.localMethod();
    }
}

로컬 클래스는 주로 해당 메서드 내부에서만 인스턴스화되어 사용되기 때문에
외부에서는 접근할 수 없습니다.

* 익명 클래스 (Anonymous Class):
익명 클래스는 클래스의 정의와 객체의 생성을 동시에 처리하는 클래스입니다.
주로 인터페이스나 추상 클래스를 간편하게 구현할 때 사용됩니다. 
익명 클래스는 한 번만 사용될 때 유용하며 코드를 더 간결하게 만들 수 있습니다.

public interface MyInterface {
    void myMethod();
}

public class OuterClass {
    MyInterface anonymousObj = new MyInterface() {
        @Override
        public void myMethod() {
            System.out.println("익명 클래스의 메서드");
        }
    };
}

익명 클래스는 클래스 이름이 없고, 객체를 생성하면서 동시에 인터페이스나 
추상 클래스의 메서드를 구현합니다. 주로 이벤트 핸들러나 스레드 등에서 
간단한 작업을 위해 사용됩니다.

--------------------------------------------------------------------------------------
이 두 가지 클래스는 모두 내부 클래스에 속하며, 특정한 상황에 따라 
선택하여 사용할 수 있습니다. 로컬 클래스는 해당 메서드 내부에서만 
사용되어야 하는 경우에 유용하며, 익명 클래스는 한 번만 사용될 때 
코드를 더 간결하게 만들 수 있습니다.